@*@inject IJSRuntime JSRuntime
@inject ILocalStorageService localStorageService*@
@*@inject NavigationManager navigationManager*@

@page "/post";
@using MyAppFrontend.Model.Posts;
@using Microsoft.AspNetCore.Components.Forms


<div class="container mx-auto py-8">
    <div class="max-w-md mx-auto bg-white rounded-lg shadow-lg">
        <div class="p-6">
            <h2 class="text-2xl font-semibold text-gray-800 mb-4">Create a Post</h2>
            <EditForm Model="postModel" OnValidSubmit="HandlePostCreation">
                 <DataAnnotationsValidator />
                <div class="mb-4">
                    <label for="title" class="text-gray-600">Title</label>
                    <InputText type="text" id="title" class="form-input mt-1 w-full" @bind="postModel.Title" required />
                    <ValidationMessage For="@(() => postModel.Title)" />
                </div>

                <div class="mb-4">
                    <label for="description" class="text-gray-600">Description</label>
                    <textarea id="description" class="form-textarea mt-1 w-full" rows="4" @bind="postModel.Description" required></textarea>
                     <ValidationMessage For="@(() => postModel.Description)" />
                </div>

                <div class="mb-6">
                    <label for="image" class="text-gray-600">Image URL</label>
                    <InputText type="url" id="image" class="form-input mt-1 w-full" @bind="postModel.ImageUrl" required />
                     <ValidationMessage For="@(() => postModel.ImageUrl)" />
                </div>

                <div class="flex justify-end">
                    <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-full">Create Post</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private PostRequestDto postModel = new PostRequestDto();

    public async Task HandlePostCreation()
    {

        Console.WriteLine("post created");
        //var res = await _postInterface.CreatePost(postModel);
        //if (res.IsSuccessStatusCode)
        //{
        //    AddSuccess();
        //    navigationManager.NavigateTo("/");
        //}
        //else
        //{
        //    showError();
        //}
    }

//private void AddSuccess()
//    {
//        JSRuntime.InvokeVoidAsync("showAlert", "Post created successfully", "success");
//    }

//private void showError()
//    {
//        JSRuntime.InvokeVoidAsync("showAlert", "Error creating post", "error");
//    }
    
}
